apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ${{ values.namespace }}-pipeline
spec:
  workspaces:
  - name: shared-workspace
    description: Git Repo for Patient Health Records Apps
  - name: sonar-settings
    description: Temporary dir for sonarqube-scan Task
  - name: vul-cache
    description: Cache vulnerabilities infomations
  - name: temp-dir
    description: Temporary dir for git-cli Task
  - name: basic-auth
    description: .git-credentials file for git-cli Task
  - name: quay-credentials
    description: quay credentials file for build-container Task
  params:
  #- name: imageurl
  #  type: string
  #  description: Target container registry URL
  - name: app-name
    type: string
  - name: git-url
    type: string
  - name: git-revision  
    type: string
  - name: git-manifests-revision  
    type: string
    default: main
  - name: git-manifests-username 
    type: string
    description: Git Repo Username for Manifests
  - name: git-manifests-useremail  
    type: string
    description: Git Repo User Email for Manifests
  - name: argocd-version
    type: string
    default: v2.11.6
  - name: image-registry
    type: string
    default: quay-registry-quay-quay.apps.rosa.rosa-hcp-1544.kfnj.p3.openshiftapps.com/skitamura-quay-org/${{ values.namespace }}
#  - name: git-manifests-user-access-token 
#    type: string
#    description: Git Repo User Access Token for Manifests
  tasks:
  - name: git-clone
    taskRef:
      kind: Task
      name: git-clone
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: shared-workspace
      
  - name: build-container
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
    - git-clone
    workspaces:
    - name: source
      workspace: shared-workspace
      subPath: app
    - name: dockerconfig
      workspace: quay-credentials
    params:
    - name: IMAGE
      #value: $(params.image-registry)/$(params.app-name):$(params.git-revision)
      value: $(params.image-registry)/$(params.app-name):latest
    - name: CONTEXT
      value: $(workspaces.source.path)
    - name: TLSVERIFY
      value: 'false'

#  - name: update-manifests
#    taskRef:
#      kind: Task
#      name: kustomize
#    runAfter:
#    - build-container
#    workspaces:
#    - name: manifest-dir
#      workspace: shared-workspace
#    params:
#    - name: KUSTOMIZE_SCRIPT
#      value: |
#        cd manifest/kustomize/app/overlays/dev
#        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/$(params.app-name)@$(tasks.build-container.results.IMAGE_DIGEST)
#        cd ../stg
#        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/$(params.app-name)@$(tasks.build-container.results.IMAGE_DIGEST)
#        cd ../prod
#        kustomize edit set image ___IMAGE_URL___@___IMAGE_DIGEST___=$(params.image-registry)/$(params.app-name)@$(tasks.build-container.results.IMAGE_DIGEST)
#
#
#  - name: push-manifests
#    taskRef:
#      kind: Task
#      name: git-cli
#    runAfter:
#    - update-manifests
#    workspaces:
#    - name: source
#      workspace: shared-workspace
#    - name: input
#      workspace: temp-dir
#    - name: basic-auth
#      workspace: basic-auth
#    params:
#    - name: GIT_USER_NAME
#      value: $(params.git-manifests-username)
#    - name: GIT_USER_EMAIL
#      value: $(params.git-manifests-useremail)
#    - name: GIT_MANIFEST_REV
#      value: $(params.git-manifests-revision)
#    - name: GIT_SCRIPT
#      value: |
#        #cd $(workspaces.source.path)
#        #git checkout $(params.git-manifests-revision)
#        #git diff
#        git branch -a
#        git add -A manifest/kustomize/app/overlays/
#        git commit -m "[TEKTON-PIPELINES] Change container image in manifests."
#        git push origin $(params.git-revision)
    - name: resync
      params:
        - name: COMPONENT_ID
          value: $(params.app-name)
      runAfter:
        - build-container
      taskRef:
        kind: Task
        name: resync

#  - name: argocd-sync
#    taskRef:
#      kind: Task
#      name: argocd-task-sync-and-wait
#    runAfter: 
#    - push-manifests
#    params:
#    - name: application-name
#      value: $(params.app-name)
#    - name: argocd-version
#      value: $(params.argocd-version)
#    - name: revision
#      value: main
